{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"card\"\n};\nconst _hoisted_2 = {\n  class: \"table\"\n};\nconst _hoisted_3 = [\"src\"];\nconst _hoisted_4 = {\n  class: \"actions\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"table\", _hoisted_2, [_cache[0] || (_cache[0] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\"), _createElementVNode(\"th\", null, \"Name\"), _createElementVNode(\"th\", null, \"Email\"), _createElementVNode(\"th\", null, \"Phone\"), _createElementVNode(\"th\", null, \"Enroll Number\"), _createElementVNode(\"th\", null, \"Date of admission\"), _createElementVNode(\"th\")])], -1 /* CACHED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.rows, (row, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index\n    }, [_createElementVNode(\"td\", null, [_createElementVNode(\"img\", {\n      src: row.avatar,\n      class: \"avatar\",\n      alt: \"\"\n    }, null, 8 /* PROPS */, _hoisted_3)]), _createElementVNode(\"td\", null, _toDisplayString(row.name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(row.email), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(row.phone), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(row.enroll), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(row.date), 1 /* TEXT */), _createElementVNode(\"td\", _hoisted_4, [_createVNode($setup[\"Pencil\"], {\n      class: \"icon\",\n      onClick: $event => _ctx.$emit('edit', index, row)\n    }, null, 8 /* PROPS */, [\"onClick\"]), _createVNode($setup[\"Trash2\"], {\n      class: \"icon delete\",\n      onClick: $event => _ctx.$emit('delete', index)\n    }, null, 8 /* PROPS */, [\"onClick\"])])]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_Fragment","_renderList","$props","rows","row","index","key","src","avatar","alt","_toDisplayString","name","email","phone","enroll","date","_hoisted_4","_createVNode","$setup","onClick","$event","_ctx","$emit"],"sources":["C:\\Users\\Fairuz Shafa' Amani\\Downloads\\vue-crud-dashboard\\vue-crud-dashboard\\src\\components\\UsersTable.vue"],"sourcesContent":["<template>\n  <div class=\"card\">\n    <table class=\"table\">\n      <thead>\n        <tr>\n          <th></th>\n          <th>Name</th>\n          <th>Email</th>\n          <th>Phone</th>\n          <th>Enroll Number</th>\n          <th>Date of admission</th>\n          <th></th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"(row, index) in rows\" :key=\"index\">\n          <td><img :src=\"row.avatar\" class=\"avatar\" alt=\"\" /></td>\n          <td>{{ row.name }}</td>\n          <td>{{ row.email }}</td>\n          <td>{{ row.phone }}</td>\n          <td>{{ row.enroll }}</td>\n          <td>{{ row.date }}</td>\n          <td class=\"actions\">\n            <Pencil class=\"icon\" @click=\"$emit('edit', index, row)\" />\n            <Trash2 class=\"icon delete\" @click=\"$emit('delete', index)\" />\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<script setup>\nimport { Pencil, Trash2 } from \"lucide-vue-next\";\n\ndefineProps({\n  rows: Array,\n});\n</script>\n\n<style scoped>\n.table {\n  width: 100%;\n  border-collapse: collapse;\n}\nth,\ntd {\n  padding: 12px;\n  border-bottom: 1px solid var(--border);\n  text-align: left;\n}\n.avatar {\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n}\n.actions {\n  display: flex;\n  gap: 8px;\n}\n.icon {\n  width: 18px;\n  height: 18px;\n  cursor: pointer;\n}\n.delete {\n  color: #e74c3c;\n}\n</style>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAM;;EACRA,KAAK,EAAC;AAAO;;;EAoBVA,KAAK,EAAC;AAAS;;uBArB3BC,mBAAA,CA4BM,OA5BNC,UA4BM,GA3BJC,mBAAA,CA0BQ,SA1BRC,UA0BQ,G,0BAzBND,mBAAA,CAUQ,gBATNA,mBAAA,CAQK,aAPHA,mBAAA,CAAS,OACTA,mBAAA,CAAa,YAAT,MAAI,GACRA,mBAAA,CAAc,YAAV,OAAK,GACTA,mBAAA,CAAc,YAAV,OAAK,GACTA,mBAAA,CAAsB,YAAlB,eAAa,GACjBA,mBAAA,CAA0B,YAAtB,mBAAiB,GACrBA,mBAAA,CAAS,M,uBAGbA,mBAAA,CAaQ,iB,kBAZNF,mBAAA,CAWKI,SAAA,QAAAC,WAAA,CAXsBC,MAAA,CAAAC,IAAI,GAAnBC,GAAG,EAAEC,KAAK;yBAAtBT,mBAAA,CAWK;MAX6BU,GAAG,EAAED;IAAK,IAC1CP,mBAAA,CAAwD,aAApDA,mBAAA,CAA+C;MAAzCS,GAAG,EAAEH,GAAG,CAACI,MAAM;MAAEb,KAAK,EAAC,QAAQ;MAACc,GAAG,EAAC;2CAC9CX,mBAAA,CAAuB,YAAAY,gBAAA,CAAhBN,GAAG,CAACO,IAAI,kBACfb,mBAAA,CAAwB,YAAAY,gBAAA,CAAjBN,GAAG,CAACQ,KAAK,kBAChBd,mBAAA,CAAwB,YAAAY,gBAAA,CAAjBN,GAAG,CAACS,KAAK,kBAChBf,mBAAA,CAAyB,YAAAY,gBAAA,CAAlBN,GAAG,CAACU,MAAM,kBACjBhB,mBAAA,CAAuB,YAAAY,gBAAA,CAAhBN,GAAG,CAACW,IAAI,kBACfjB,mBAAA,CAGK,MAHLkB,UAGK,GAFHC,YAAA,CAA0DC,MAAA;MAAlDvB,KAAK,EAAC,MAAM;MAAEwB,OAAK,EAAAC,MAAA,IAAEC,IAAA,CAAAC,KAAK,SAASjB,KAAK,EAAED,GAAG;0CACrDa,YAAA,CAA8DC,MAAA;MAAtDvB,KAAK,EAAC,aAAa;MAAEwB,OAAK,EAAAC,MAAA,IAAEC,IAAA,CAAAC,KAAK,WAAWjB,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}